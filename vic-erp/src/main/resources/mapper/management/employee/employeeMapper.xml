<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.5//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vic.erp.project.mapper.management.employee.EmployeeMapper">
	
	<!-- 직원 토탈 -->
	<select id="employeeTotal" parameterType="hashMap" resultType="int">
	    SELECT 
	        COUNT(e.emp_no) 
	    FROM 
	        vicerp.emp e 
	        INNER JOIN vicerp.com_cd_dtl ccd1 ON e.crnk_cd = ccd1.com_cd AND ccd1.com_cd_id = '100'
	        JOIN vicerp.org o ON e.blng_org_no = o.org_no
	        JOIN vicerp.com_cd_dtl ccd2 ON e.hffc_div_cd = ccd2.com_cd AND ccd2.com_cd_id = '200'
	    <where>
	        <choose>
	            <when test="category == 'emp_nm'">
	                AND UPPER(e.emp_nm) LIKE '%' || UPPER(#{keyword}) || '%'
	            </when>
	            <when test="category == 'crnk_cd'">
	                AND UPPER(ccd1.com_cd_nm) LIKE '%' || UPPER(#{keyword}) || '%'
	            </when>
	            <when test="category == 'blng_org_no'">
	                AND UPPER(o.org_nm) LIKE '%' || UPPER(#{keyword}) || '%'
	            </when>
	            <when test="category == 'hffc_div_cd'">
	                AND UPPER(ccd2.com_cd_nm) LIKE '%' || UPPER(#{keyword}) || '%'
	            </when>
	            <otherwise>
	                <!-- 기본적으로 아무 조건이 없는 경우 모든 레코드를 카운트합니다. -->
	            </otherwise>
	        </choose>
	    </where>
	</select>

	<!-- 직원 리스트 -->
	<select id="employeeList" resultType="com.vic.erp.project.VO.EmployeeVO">
	    SELECT 
	        e.emp_no,
	        e.emp_nm,
	        o.org_nm,
	        ccd1.com_cd_nm AS employe_position,
	        COALESCE(e.indd_email, ''),
	        ccd2.com_cd_nm AS status_employment,
	        e.entr_dt,
	        e.hp_tel_no
	    FROM 
	        vicerp.emp e 
	        INNER JOIN vicerp.org o ON e.blng_org_no = o.org_no
	        JOIN vicerp.com_cd_dtl ccd1 ON e.crnk_cd = ccd1.com_cd AND ccd1.com_cd_id = '100'
	        JOIN vicerp.com_cd_dtl ccd2 ON e.hffc_div_cd = ccd2.com_cd AND ccd2.com_cd_id = '200'
	    <where>
	        <choose>
	            <when test="category == 'emp_nm'">
	                AND UPPER(e.emp_nm) LIKE '%' || UPPER(#{keyword}) || '%'
	            </when>
	            <when test="category == 'crnk_cd'">
	                AND UPPER(ccd1.com_cd_nm) LIKE '%' || UPPER(#{keyword}) || '%'
	            </when>
	            <when test="category == 'blng_org_no'">
	                AND UPPER(o.org_nm) LIKE '%' || UPPER(#{keyword}) || '%'
	            </when>
	            <when test="category == 'hffc_div_cd'">
	                AND UPPER(ccd2.com_cd_nm) LIKE '%' || UPPER(#{keyword}) || '%'
	            </when>
	            <otherwise>
	                <!-- 기본적으로 아무 조건이 없는 경우 모든 레코드를 검색합니다. -->
	            </otherwise>
	        </choose>
	    </where>
	    ORDER BY e.crnk_cd ASC
	    LIMIT #{postNum} OFFSET #{displayPost}
	</select>
	<!-- 사원번호 중복체크 -->
	<select id="checkEmployeeId" parameterType="String" resultType="int">
		select count(e.emp_no) from vicerp.emp e where e.emp_no = #{emp_no}
	</select>
	
	<!-- 직원 생성 -->
	<insert id="insertEmployee" parameterType="com.vic.erp.project.VO.EmployeeVO">
		INSERT INTO vicerp.emp
			(emp_no,
			 emp_nm,
			 cmpy_email,
			 hp_tel_no,
			 hffc_div_cd,
			 wrk_shap_cd,
			 crnk_cd,
			 blng_org_no,
			 entr_dt,
			 reg_dttm,
			 reg_emp_no,
			 modf_dttm,
			 modf_emp_no)
		VALUES
		 (#{emp_no},
		  #{emp_nm},
		  #{cmpy_email},
		  #{hp_tel_no},
		  #{hffc_div_cd},	  		  		  		  		  
		  #{wrk_shap_cd},
		  #{crnk_cd},
		  #{blng_org_no},
	 	  #{entr_dt},
		  #{reg_dttm},
		  #{reg_emp_no},
		  #{modf_dttm},
		  #{modf_emp_no})
	</insert>
	<insert id="registerEmployee" parameterType="com.vic.erp.project.VO.EmployeeVO">
		CALL vicerp.sp_regist(
		    #{emp_no, mode=IN, jdbcType=VARCHAR},
		    #{cmpy_email_1, mode=IN, jdbcType=VARCHAR},
		    #{cmpy_email_2, mode=IN, jdbcType=VARCHAR},
		    #{hffc_div_cd, mode=IN, jdbcType=VARCHAR},
		    #{wrk_shap_cd, mode=IN, jdbcType=VARCHAR},
		    #{crnk_cd, mode=IN, jdbcType=VARCHAR},
		    #{emp_org_no, mode=IN, jdbcType=VARCHAR},
		    #{emp_valid_st_dt, mode=IN, jdbcType=VARCHAR},
		    #{emp_valid_ed_dt, mode=IN, jdbcType=VARCHAR}
		)
    </insert>
	<!-- 직원 삭제 -->
	<delete id="deleteEmployee" parameterType="java.lang.String">
		DELETE FROM vicerp.emp WHERE
		emp_no = #{emp_no}
	</delete>
</mapper>